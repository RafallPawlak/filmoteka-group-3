{"mappings":"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","sources":["src/my-library.js","src/js/modalMovie-myLibrary.js","src/js/showMyLibraryLists.js","src/js/fetchApiById.js"],"sourcesContent":["import './js/fetchMovie';\nimport './js/modal-footer';\nimport './js/modal-teams';\nimport './js/modalMovie-myLibrary';\nimport './js/localStorage';\nimport './js/showMyLibraryLists';\n","import { descriptionTagMovie } from './fetchMovie';\nimport { changeWatchedQueueList, textModalButtons } from './localStorage';\nimport {\n  showFullLibrary,\n  showWatched,\n  showQueue,\n  btnLibWatched,\n  btnLibQueue,\n} from './showMyLibraryLists';\n//console.log('modalMovie begin file. It is before create modal window');\n\nconst body = document.querySelector('body');\nconst card = document.querySelector('[data-modal-open]');\nconst modal = document.querySelector('[data-modal]');\n//const backdrop = document.querySelector('.backdrop');\n\nif (card) {\n  card.addEventListener('click', openModal);\n}\n\nexport function openModal(e) {\n  if (e.target.parentElement.className !== 'thumb') {\n    return;\n  }\n  toggleModal();\n  body.classList.add('no-scroll');\n  window.addEventListener('keydown', onEscClick);\n  const id = e.target.parentElement.dataset.id;\n  descriptionTagMovie(id).then(() => {\n    //console.log('it is after create modal window');\n    const closeBtn = document.querySelector('[data-movie-close]');\n    //console.log(closeBtn);\n    closeBtn.addEventListener('click', closeModal);\n    closeBtn.addEventListener('click', loadLibraryListOnModalClose);\n    changeWatchedQueueList(id);\n    textModalButtons(id);\n  });\n  // console.log('modal', e.target.parentElement.className, id);\n}\n\nexport function closeModal() {\n  modal.classList.toggle('is-hidden');\n  body.classList.remove('no-scroll');\n}\n\nfunction toggleModal() {\n  modal.classList.toggle('is-hidden');\n}\n\nfunction onEscClick(event) {\n  if (event.code === 'Escape') {\n    closeModal();\n    window.removeEventListener('keydown', onEscClick);\n  }\n}\n\nfunction loadLibraryListOnModalClose() {\n  if (\n    !btnLibWatched.classList.contains('btn--active') &&\n    !btnLibQueue.classList.contains('btn--active')\n  ) {\n    showFullLibrary();\n  }\n  if (btnLibWatched.classList.contains('btn--active')) {\n    showWatched();\n  }\n  if (btnLibQueue.classList.contains('btn--active')) {\n    showQueue();\n  }\n}\n\n// backdrop.addEventListener('click', (e) => {\n//   if (e.target.className === 'backdrop') {\n//     closeModal();\n//   }\n// });","import { getKey } from './localStorage';\nimport { fetchApiById } from './fetchApiById';\nimport { roundingMethodToFirstPlace } from './fetchMovie';\n\nconst libraryGrid = document.querySelector('.library__grid');\nconst libraryInfo = document.querySelector('.filmless');\nexport const btnLibWatched = document.querySelector('.btn__lib__watched');\nexport const btnLibQueue = document.querySelector('.btn__lib__queue');\nconst library = document.querySelector('.library');\n\nshowFullLibrary();\nbtnLibWatched.addEventListener('click', showWatched);\nbtnLibQueue.addEventListener('click', showQueue);\n\n// showing full films list of both lists (queue and watched)\nexport function showFullLibrary() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  let watchedIdList = [];\n  let queueIdList = [];\n  if (getKey('watched')) {\n    watchedIdList = getKey('watched');\n  }\n  if (getKey('queue')) {\n    queueIdList = getKey('queue');\n  }\n  const fullIdList = [...watchedIdList, ...queueIdList];\n\n  if (watchedIdList.length === 0 && queueIdList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your library</h2>\n      <p>Find something you've watched or something to watch from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    const mainLibraryTitle = `<h2 class=\"filmless__title\">Your full library:<h2>`;\n    libraryInfo.insertAdjacentHTML('beforeend', mainLibraryTitle);\n    for (let id of fullIdList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nexport function showWatched() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  const idList = getKey('watched');\n\n  addBtnActiveClass(btnLibWatched);\n  removeBtnActiveClass(btnLibQueue);\n\n  if (!idList || idList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your watched</h2>\n      <p>Find something you've watched from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of idList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nexport function showQueue() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  const idList = getKey('queue');\n\n  addBtnActiveClass(btnLibQueue);\n  removeBtnActiveClass(btnLibWatched);\n\n  if (!idList || idList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your queue list</h2>\n      <p>Find something to watch from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of idList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nconst addBtnActiveClass = btnToAddClassTo => {\n  if (btnToAddClassTo.classList.contains('btn--active')) {\n    return;\n  }\n  btnToAddClassTo.classList.add('btn--active');\n};\n\nconst removeBtnActiveClass = btnToRemoveClassFrom => {\n  if (!btnToRemoveClassFrom.classList.contains('btn--active')) {\n    return;\n  }\n  btnToRemoveClassFrom.classList.remove('btn--active');\n};\n","export async function fetchApiById(idValue) {\n  try {\n    const API_KEY_V3 = 'bdba5342660bdd1dac5d09b885091a0c';\n    const API_URL = 'https://api.themoviedb.org/3/';\n\n    const params = new URLSearchParams({\n      api_key: API_KEY_V3,\n    });\n    const response = await fetch(API_URL + 'movie/' + idValue + '?' + params);\n    const films = await response.json();\n    //console.log(films);\n    return films;\n  } catch (error) {\n    console.log('fetchApiById: ', error);\n  }\n}\n"],"names":["parcelRequire","$dNTj1","$31u3U","async","$9affc9921a72d0e8$export$a9590efecd3afba7","idValue","API_URL","params","URLSearchParams","api_key","response","fetch","json","error","console","log","$fdcecbdab8e02d8d$var$libraryGrid","document","querySelector","$fdcecbdab8e02d8d$var$libraryInfo","$fdcecbdab8e02d8d$export$d65f4e0883bda19a","$fdcecbdab8e02d8d$export$70c228520abf1992","$fdcecbdab8e02d8d$export$3cc22b63c532f48e","innerHTML","watchedIdList","queueIdList","getKey","fullIdList","length","noLibraryMarkup","insertAdjacentHTML","mainLibraryTitle","id","then","data","yearWithDate","Date","release_date","genresArray","genres","map","genre","name","markup","poster_path","title","join","getFullYear","roundingMethodToFirstPlace","vote_average","$fdcecbdab8e02d8d$export$c0b6fe2b6c5ef108","idList","$fdcecbdab8e02d8d$var$addBtnActiveClass","$fdcecbdab8e02d8d$var$removeBtnActiveClass","$fdcecbdab8e02d8d$export$a362ca83dec24041","addEventListener","btnToAddClassTo","classList","contains","add","btnToRemoveClassFrom","remove","$d75c0b3e84a4fa6d$var$body","$d75c0b3e84a4fa6d$var$card","$d75c0b3e84a4fa6d$var$modal","$d75c0b3e84a4fa6d$export$3f6fecd573f3fa48","toggle","$d75c0b3e84a4fa6d$var$onEscClick","event","code","window","removeEventListener","$d75c0b3e84a4fa6d$var$loadLibraryListOnModalClose","e","target","parentElement","className","dataset","descriptionTagMovie","closeBtn","changeWatchedQueueList","textModalButtons"],"version":3,"file":"my-library.621d7e78.js.map"}