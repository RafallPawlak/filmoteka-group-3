{"mappings":"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","sources":["src/my-library.js","src/js/showMyLibraryLists.js","src/js/fetchApiById.js"],"sourcesContent":["import './js/fetchMovie';\nimport './js/modal-footer';\nimport './js/modal-teams';\nimport './js/modalMovie';\nimport './js/localStorage';\nimport './js/showMyLibraryLists';\n","import { getKey } from './localStorage';\nimport { fetchApiById } from './fetchApiById';\nimport { roundingMethodToFirstPlace } from './fetchMovie';\n\nconst libraryGrid = document.querySelector('.library__grid');\nconst libraryInfo = document.querySelector('.filmless');\nconst btnLibWatched = document.querySelector('.btn__lib__watched');\nconst btnLibQueue = document.querySelector('.btn__lib__queue');\n// const library = document.querySelector('.library');\n\nshowFullLibrary();\nbtnLibWatched.addEventListener('click', showWatched);\nbtnLibQueue.addEventListener('click', showQueue);\n\n// showing full films list of both lists (queue and watched)\nfunction showFullLibrary() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  let watchedIdList = [];\n  let queueIdList = [];\n  if (getKey('watched')) {\n    watchedIdList = getKey('watched');\n  }\n  if (getKey('queue')) {\n    queueIdList = getKey('queue');\n  }\n  const fullIdList = [...watchedIdList, ...queueIdList];\n\n  if (watchedIdList.length === 0 && queueIdList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your library</h2>\n      <p>Find something you've watched or something to watch from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of fullIdList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nfunction showWatched() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  const idList = getKey('watched');\n\n  addBtnActiveClass(btnLibWatched);\n  removeBtnActiveClass(btnLibQueue);\n\n  if (!idList || idList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your watched</h2>\n      <p>Find something you've watched from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of idList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nfunction showQueue() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  const idList = getKey('queue');\n\n  addBtnActiveClass(btnLibQueue);\n  removeBtnActiveClass(btnLibWatched);\n\n  if (!idList || idList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your queue list</h2>\n      <p>Find something to watch from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of idList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nconst addBtnActiveClass = btnToAddClassTo => {\n  if (btnToAddClassTo.classList.contains('btn--active')) {\n    return;\n  }\n  btnToAddClassTo.classList.add('btn--active');\n};\n\nconst removeBtnActiveClass = btnToRemoveClassFrom => {\n  if (!btnToRemoveClassFrom.classList.contains('btn--active')) {\n    return;\n  }\n  btnToRemoveClassFrom.classList.remove('btn--active');\n};\n","export async function fetchApiById(idValue) {\n  try {\n    const API_KEY_V3 = 'bdba5342660bdd1dac5d09b885091a0c';\n    const API_URL = 'https://api.themoviedb.org/3/';\n\n    const params = new URLSearchParams({\n      api_key: API_KEY_V3,\n    });\n    const response = await fetch(API_URL + 'movie/' + idValue + '?' + params);\n    const films = await response.json();\n    console.log(films);\n    return films;\n  } catch (error) {\n    console.log('fetchApiById: ', error);\n  }\n}\n"],"names":["parcelRequire","$8nrFW","$bpxeT","$75b8603781d33cea$export$a9590efecd3afba7","idValue","$75b8603781d33cea$var$_fetchApiById","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","params","response","films","URLSearchParams","api_key","fetch","API_URL","_ctx","sent","json","console","log","t0","$d6b47b7679bedba3$var$libraryGrid","document","querySelector","$d6b47b7679bedba3$var$libraryInfo","$d6b47b7679bedba3$var$btnLibWatched","$d6b47b7679bedba3$var$btnLibQueue","innerHTML","watchedIdList","queueIdList","$UL92Z","getKey","fullIdList","concat","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","length","insertAdjacentHTML","_step","_iterator","Symbol","iterator","next","done","value","then","data","yearWithDate","Date","release_date","genresArray","genres","map","genre","name","markup","id","poster_path","title","join","getFullYear","$4cG42","roundingMethodToFirstPlace","vote_average","err","return","$d6b47b7679bedba3$var$showFullLibrary","addEventListener","idList","$d6b47b7679bedba3$var$addBtnActiveClass","$d6b47b7679bedba3$var$removeBtnActiveClass","btnToAddClassTo","classList","contains","add","btnToRemoveClassFrom","remove"],"version":3,"file":"my-library.cf119203.js.map"}