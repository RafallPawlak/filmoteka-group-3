{"mappings":"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","sources":["src/my-library.js","src/js/showMyLibraryLists.js","src/js/fetchApiById.js"],"sourcesContent":["import './js/fetchMovie';\nimport './js/modal-footer';\nimport './js/modal-teams';\nimport './js/modalMovie';\nimport './js/localStorage';\nimport './js/showMyLibraryLists';\n","import { getKey } from './localStorage';\nimport { fetchApiById } from './fetchApiById';\nimport { roundingMethodToFirstPlace } from './fetchMovie';\n\nconst libraryGrid = document.querySelector('.library__grid');\nconst libraryInfo = document.querySelector('.filmless');\nconst btnLibWatched = document.querySelector('.btn__lib__watched');\nconst btnLibQueue = document.querySelector('.btn__lib__queue');\n// const library = document.querySelector('.library');\n\nshowFullLibrary();\nbtnLibWatched.addEventListener('click', showWatched);\nbtnLibQueue.addEventListener('click', showQueue);\n\n// showing full films list of both lists (queue and watched)\nfunction showFullLibrary() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  let watchedIdList = [];\n  let queueIdList = [];\n  if (getKey('watched')) {\n    watchedIdList = getKey('watched');\n  }\n  if (getKey('queue')) {\n    queueIdList = getKey('queue');\n  }\n  const fullIdList = [...watchedIdList, ...queueIdList];\n\n  if (watchedIdList.length === 0 && queueIdList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your library</h2>\n      <p>Find something you've watched or something to watch from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of fullIdList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nfunction showWatched() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  const idList = getKey('watched');\n\n  addBtnActiveClass(btnLibWatched);\n  removeBtnActiveClass(btnLibQueue);\n\n  if (!idList || idList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your watched</h2>\n      <p>Find something you've watched from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of idList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nfunction showQueue() {\n  libraryGrid.innerHTML = '';\n  libraryInfo.innerHTML = '';\n\n  const idList = getKey('queue');\n\n  addBtnActiveClass(btnLibQueue);\n  removeBtnActiveClass(btnLibWatched);\n\n  if (!idList || idList.length === 0) {\n    const noLibraryMarkup = `<h2 class=\"filmless__title\">No films have been added to your queue list</h2>\n      <p>Find something to watch from the most popular</p>\n      <button class=\"modal__btn filmless__button\" onclick=\"location.href='https://rafallpawlak.github.io/filmoteka-group-3/'\" type=\"button\">LET'S GO</button>`;\n    libraryInfo.insertAdjacentHTML('beforeend', noLibraryMarkup);\n  } else {\n    for (let id of idList) {\n      fetchApiById(id).then(data => {\n        let yearWithDate = new Date(data.release_date);\n        const genresArray = data.genres.map(genre => {\n          return genre.name;\n        });\n        const markup = `\n      <li>\n        <figure class=\"card\">\n          <div class=\"thumb\" data-id=\"${data.id}\">\n            <img class=\"img\" src=\"https://www.themoviedb.org/t/p/w300${\n              data.poster_path\n            }\" />\n          </div>\n          <figcaption>\n            <h3 class=\"title\">${data.title}</h3>\n            <div class=\"details-wrapper\">\n              <p class=\"details\" data-film_id=\"${data.id}\">${genresArray.join(\n          ', '\n        )} &#124; ${yearWithDate.getFullYear()}</p>\n              <div class=\"rating rating--visible\">${roundingMethodToFirstPlace(\n                data.vote_average\n              )}</div>\n            </div>\n          </figcaption>\n        </figure>\n      </li>\n      `;\n        libraryGrid.insertAdjacentHTML('beforeend', markup);\n      });\n    }\n  }\n}\n\nconst addBtnActiveClass = btnToAddClassTo => {\n  if (btnToAddClassTo.classList.contains('btn--active')) {\n    return;\n  }\n  btnToAddClassTo.classList.add('btn--active');\n};\n\nconst removeBtnActiveClass = btnToRemoveClassFrom => {\n  if (!btnToRemoveClassFrom.classList.contains('btn--active')) {\n    return;\n  }\n  btnToRemoveClassFrom.classList.remove('btn--active');\n};\n","export async function fetchApiById(idValue) {\n  try {\n    const API_KEY_V3 = 'bdba5342660bdd1dac5d09b885091a0c';\n    const API_URL = 'https://api.themoviedb.org/3/';\n\n    const params = new URLSearchParams({\n      api_key: API_KEY_V3,\n    });\n    const response = await fetch(API_URL + 'movie/' + idValue + '?' + params);\n    const films = await response.json();\n    console.log(films);\n    return films;\n  } catch (error) {\n    console.log('fetchApiById: ', error);\n  }\n}\n"],"names":["parcelRequire","$31u3U","async","$9affc9921a72d0e8$export$a9590efecd3afba7","idValue","API_URL","params","URLSearchParams","api_key","response","fetch","films","json","console","log","error","$fdcecbdab8e02d8d$var$libraryGrid","document","querySelector","$fdcecbdab8e02d8d$var$libraryInfo","$fdcecbdab8e02d8d$var$btnLibWatched","$fdcecbdab8e02d8d$var$btnLibQueue","innerHTML","watchedIdList","queueIdList","getKey","fullIdList","length","noLibraryMarkup","insertAdjacentHTML","id","then","data","yearWithDate","Date","release_date","genresArray","genres","map","genre","name","markup","poster_path","title","join","getFullYear","$dNTj1","roundingMethodToFirstPlace","vote_average","$fdcecbdab8e02d8d$var$showFullLibrary","addEventListener","idList","$fdcecbdab8e02d8d$var$addBtnActiveClass","$fdcecbdab8e02d8d$var$removeBtnActiveClass","btnToAddClassTo","classList","contains","add","btnToRemoveClassFrom","remove"],"version":3,"file":"my-library.b80e38c9.js.map"}